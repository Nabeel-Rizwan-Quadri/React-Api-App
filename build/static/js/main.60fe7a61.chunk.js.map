{"version":3,"sources":["components/Post/index.js","App.js","index.js"],"names":["post","id","title","userId","body","del","edit","className","onClick","App","useState","setPost","isEdit","setIsEdit","setTitle","setBody","editIndex","setIndex","useEffect","fetch","then","res","json","update","tempPost","console","log","map","item","index","Post","splice","onChange","e","target","value","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAeeA,MAff,YAAsD,IAAtCC,EAAqC,EAArCA,GAAYC,GAAyB,EAAjCC,OAAiC,EAAzBD,OAAOE,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,IAAKC,EAAO,EAAPA,KAE1C,OAAO,gCAEH,qBAAIC,UAAU,OAAd,wBAAiCN,KACjC,oBAAIM,UAAU,OAAd,SAAsBL,IACtB,uBACA,mBAAGK,UAAU,OAAb,SAAqBH,IAErB,wBAAQI,QAASH,EAAjB,oBACA,wBAAQG,QAASF,EAAjB,sB,MC+DOG,MArEf,WAKE,MAAwBC,mBAAS,IAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAA4BD,oBAAS,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAA0BH,qBAA1B,mBAAOR,EAAP,KAAcY,EAAd,KACA,EAAwBJ,qBAAxB,mBAAON,EAAP,KAAaW,EAAb,KACA,EAA8BL,qBAA9B,mBAAOM,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACRC,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAIV,EAAQU,QACpB,IAEH,IAkBME,EAAS,WAEb,IAAMC,EAAQ,YAAOxB,GACrByB,QAAQC,IAAIF,EAASR,GAAWd,OAChCsB,EAASR,GAAWd,MAAQA,EAC5BsB,EAASR,GAAWZ,KAAOA,EAC3BO,EAAQa,GAERX,GAAU,IAIZ,OACA,qBAAKN,UAAU,iBAAf,SACGP,EAAK2B,KAAI,SAACC,EAAKC,GACV,OAAQ,sBAAKtB,UAAU,OAAf,UAEN,cAACuB,EAAD,CAAM7B,GAAI2B,EAAK3B,GAAIE,OAAQyB,EAAKzB,OAAQD,MAAO0B,EAAK1B,MAAOE,KAAOwB,EAAKxB,KAAMC,IAAK,kBAnChF,SAACwB,GAEXJ,QAAQC,IAAI,QAASG,GAGrB,IAAML,EAAQ,YAAOxB,GACrBwB,EAASO,OAAOF,EAAO,GACvBlB,EAAQa,GA4BsFnB,CAAIwB,IAAQvB,KAAM,kBAzBrG,SAACuB,GAEZJ,QAAQC,IAAIG,GAEZhB,GAAU,GACVI,EAASY,GAoB2GvB,CAAKuB,MAE/GjB,GAAUI,IAAca,GACxB,gCACE,2CACA,uBAAOG,SAAY,SAACC,GAAD,OAAOnB,EAASmB,EAAEC,OAAOC,QAASC,YAAaR,EAAK1B,QAAgB,uBACvF,0CACA,uBAAO8B,SAAY,SAACC,GAAD,OAAOlB,EAAQkB,EAAEC,OAAOC,QAAQC,YAAaR,EAAKxB,OAAc,uBACnF,wBAAQI,QAASe,EAAjB,gCC1DhBc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.60fe7a61.chunk.js","sourcesContent":["function post ({id, userId, title, body, del, edit}) {\r\n    \r\n    return <div>\r\n        \r\n        <h2 className=\"just\">Unique Id: {id}</h2>\r\n        <h1 className=\"just\">{title}</h1>\r\n        <br/>\r\n        <p className=\"just\">{body}</p>\r\n        \r\n        <button onClick={del}>Delete</button>\r\n        <button onClick={edit}>Edit</button>\r\n        \r\n    </div>\r\n}\r\n\r\nexport default post\r\n","import React, { useState, useEffect } from 'react'\r\nimport Post from './components/Post'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n\r\n  // Api: Application Programable Interface\r\n  // backend server -> API -> Front End\r\n\r\n  const [post, setPost] = useState([])\r\n  const [isEdit, setIsEdit] = useState(false)\r\n  const [title, setTitle] = useState()\r\n  const [body, setBody] = useState()\r\n  const [editIndex, setIndex] = useState()\r\n\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/posts')\r\n    .then(res => res.json())\r\n    .then(res => setPost(res))\r\n  }, [])\r\n\r\n  const del = (index) =>{\r\n    //to delete the post\r\n    console.log(\"Index\", index)\r\n\r\n    //code to delete\r\n    const tempPost = [...post]\r\n    tempPost.splice(index, 1)\r\n    setPost(tempPost)\r\n  }\r\n\r\n  const edit = (index) =>{\r\n    //to edit the post\r\n    console.log(index)\r\n\r\n    setIsEdit(true)\r\n    setIndex(index)\r\n  }\r\n\r\n  const update = () =>{\r\n\r\n    const tempPost = [...post]\r\n    console.log(tempPost[editIndex].title)\r\n    tempPost[editIndex].title = title    \r\n    tempPost[editIndex].body = body\r\n    setPost(tempPost)\r\n\r\n    setIsEdit(false)\r\n\r\n  }\r\n\r\n  return (\r\n  <div className='grid-container'>\r\n    {post.map((item,index) => {\r\n          return  <div className='item'>\r\n            \r\n            <Post id={item.id} userId={item.userId} title={item.title} body= {item.body} del={()=>del(index)} edit={()=>edit(index)}/>\r\n            {\r\n              isEdit && editIndex === index &&\r\n              <div>\r\n                <p>Edit Title</p>\r\n                <input onChange = {(e) => setTitle(e.target.value)}  placeholder={item.title} ></input><br/>\r\n                <p>Edit Body</p>\r\n                <input onChange = {(e) => setBody(e.target.value)} placeholder={item.body}></input><br/>\r\n                <button onClick={update}>update</button>\r\n              </div>\r\n            }\r\n            </div>\r\n        })}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}